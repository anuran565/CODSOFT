#We had created a welcome page in which we have a button which will take us to the main application.
#Welcome.py
import tkinter as tk
from tkinter import *
from PIL import Image, ImageTk
import subprocess

def please_continue():
    subprocess.Popen(["python","Task 3.py"])

window = tk.Tk()
window.title("Welcome")
window.geometry("400x650+400+100")

window.configure(bg="lightblue")

label = tk.Label(window, text="Welcome to Password Generator!", bg="lightblue", font=("Arial", 16))
label.pack(pady=20)

try:
    # Open the image using PIL
    image = Image.open("C:/Users/anura/OneDrive/MSCBD/Data Science/Big Data Analytics/Internships/Python Programming Internship/Task 3/image1.jpg")
    # Convert it to a Tkinter PhotoImage
    bgimg = ImageTk.PhotoImage(image)
    bgimg_label = Label(window, image=bgimg)
    bgimg_label.image = bgimg 
    bgimg_label.place(x=0, y=200) 
except FileNotFoundError:
    print("Image not found.")
    error_label = tk.Label(window, text="Image Not Found", bg="red")
    error_label.pack()

Button(window, text="Continue", command=please_continue, height=3, width=13, bd=6,bg="black",fg="white").place(x=160, y=350)

window.mainloop()
#The next code will be of the main application
#Task 3.py
import tkinter as tk
from tkinter import ttk,Button
import subprocess
import os
import main_execution

window=tk.Tk()
window.title("Password Generator")
window.geometry("400x650+400+100")

# Add a heading label
heading_label = tk.Label(window, text="Password Generator", font=("Arial", 16, "bold"))
heading_label.pack(pady=10)  

# Set background color
window.configure(bg="#000000")

username_label=tk.Label(window,text="Username").place(x=100,y=150)
password_label=tk.Label(window,text="Password").place(x=100,y=200)
confirmpassword_label=tk.Label(window,text="Confirm Password").place(x=100,y=250)

global entry1
global entry2
global entry3

entry1=tk.Entry(window,bd=2)
entry1.place(x=230,y=150)

entry2=tk.Entry(window,bd=2,show="*")
entry2.place(x=230,y=200)

entry3=tk.Entry(window,bd=2,show="*")
entry3.place(x=230,y=250)

suggested_password_label = tk.Label(window, text="Suggested Password:", bg="#000000", fg="white")
suggested_password_label.place(x=100, y=500)

suggested_password_entry = tk.Entry(window, bd=2)
suggested_password_entry.place(x=230, y=500)


def check_password():
    password = entry2.get()
    confirmpassword = entry3.get()
    if password == confirmpassword:
        if len(password) < 8:
            print("Length of the password should be greater than or equal to 8.")
        else:
            print("Good to go !!! ")
    else:
        print("Password and Confirmed password should be the same.")


def generate_password():
    password = entry2.get() # Get the password value from entry2.
    strong_password = main_execution.generate_strong_password(password) #pass the password value.
    suggested_password_entry.delete(0, tk.END)
    suggested_password_entry.insert(0, strong_password)


submit_button=Button(window,text="Submit",command=check_password,height=3,width=13,bd=6).place(x=100,y=300)
gtg_button=Button(window,text="Suggest Password",command=generate_password,height=3,width=13,bd=6).place(x=230,y=300)


window.mainloop()

#We tried some dummy programs to know the logic behind the execution of password generation based on the password entered by the user
#Dummy Program.py
#dummy program for random password generator using python
import random
import string

length=int(input("Enter the length of the password : "))
lower=string.ascii_lowercase
upper=string.ascii_uppercase
num=string.digits

symbols=string.punctuation
all = lower + upper + num + symbols
temp=random.sample(all,length)
password="".join(temp)
print(password)

#Dummy Program 2.py
import random
import string

length=int(input("Enter the length of the password : "))
lower=string.ascii_lowercase
upper=string.ascii_uppercase
num=string.digits

symbols=string.punctuation

while True:
    pass_len=int(input("Enter the length of the password : "))

    if pass_len<8:
        print("The password length should be more than 8.")
        continue
    else:
        break


characters=lower+upper+num+symbols
password=""

for i in range(pass_len):
    password+=random.choice(characters)

print("The password is generated : ",password)

#Dummy Program 3.py
import random
import string

def generate_password(length=10):
    chars=string.ascii_letters + string.digits + string.punctuation
    password="".join(random.choice(chars) for i in range(length))
    return password

print(generate_password())

#We created an another python file in which we gave the logic of password generation and imported this file in Task 3.py by giving the code import main_execution
import random
import string

def generate_strong_password(password=""):
    """Generates a strong password based on the provided password or a default length."""
    length = 12  # Default password length
    try:
        entered_length = int(password) #attempt to get the length from the user password field.
        length = max(8, entered_length) # ensure minimum length is 8.
    except ValueError:
        pass # if the password entry is not a number, keep the default length.

    lower = string.ascii_lowercase
    upper = string.ascii_uppercase
    num = string.digits
    symbols = string.punctuation
    all_chars = lower + upper + num + symbols
    temp = random.sample(all_chars, length)
    strong_password = "".join(temp)
    return strong_password

